문제:
콩벌레는 보고 있는 방향에 장애물이 없으면 전진하다가 장애물을 만나면 좌우로 방향을 꺾는 습성이 있습니다. 
이때, 최초의 장애물을 만날 때는 반시계 방향으로 꺾고, 
다음 장애물을 만날 때마다는 기존에 반시계 방향으로 꺾었을 경우 시계 방향으로, 기존에 시계 방향으로 꺾었을 경우 반시계 방향으로 꺾습니다.

콩벌레의 위치와 보고 있는 방향이 주어졌을 때 콩벌레가 10 × 10 지도를 빠져나갈 수 있는지 판단하는 프로그램을 만드세요.

콩벌레가 지도 상에서 사라지면 지도를 빠져나간 것으로 간주합니다.

답안:

//don't place package name. 

import java.io.*;

import java.util.*; 

//don't change 'Main' class name and  'public' accessor. 

public class Main {
	static int[]dx= {-1,0,1,0};
	static int[]dy= {0,-1,0,1};
	
	static boolean yesOrNo(int[][]map,int r,int c)
	{
		int dir=0;    //0은 위, 1은 좌, 2는 하, 3은 우
		int check=0;  //0은 반시계, 1은 시계
		boolean result=false;

		while(true)
		{
			int nr=r+dx[dir];
			int nc=c+dy[dir];
			//빈 공간
			if(map[nr][nc]==0)
			{
				if(nr==0||nc==0)
				{
					result=true;
					break;
				}
				else
				{
					r=nr;
					c=nc;
				}				
			}
			//벽
			else
			{
				if(check==0)
				{
					dir=(dir+1)%4;
					check=1;
					int nnr=r+dx[dir];
					int nnc=c+dy[dir];
					if(map[nnr][nnc]==1)
					{
						result=false;
						break;
					}
					else
					{
						r=nnr;
						c=nnc;
					}
				}
				//시계
				else
				{
					dir=(dir+3)%4;
					check=0;
					int nnr=r+dx[dir];
					int nnc=c+dy[dir];
					if(map[nnr][nnc]==1)
					{
						result=false;
						break;
					}
					else
					{
						r=nnr;
						c=nnc;
					}
				}
			}
	
		}
		return result;
	}
 public static void main(String[] args) throws IOException { 

     Scanner scanner = new Scanner(System.in); 

    
     int n=10;
     int [][]map=new int[n][n];
     int r=0;
     int c=0;
     for(int i=0;i<n;i++)
     {
    	 String temp=scanner.nextLine();
    	 for(int j=0;j<n;j++)
    	 {
    		 char tempChar=temp.charAt(j);
    		 int tempInt=Character.getNumericValue(tempChar);
    		 map[i][j]=tempInt;
    		 if(tempInt==2)
    		 {
    			 r=i;
    			 c=j;
    		 }
    	 }
     }	
     
     if(yesOrNo(map,r,c))
    	System.out.println("yes"); 
     else
    	 System.out.println("no"); 

     

 }
}