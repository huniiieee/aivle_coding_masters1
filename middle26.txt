문제:
문자열 복사 사태가 벌어졌습니다. 따라서 현재 모든 사람들이 문자열 복사를 할 수 있게 되었습니다.
문자열 복사의 과정은 다음과 같습니다. 먼저, 길이가 N인 원본 문자열에 대해, 1 ≤ k ≤ N인 정수 k를 고릅니다.
그 뒤, 해당 문자열에서 k개의 연속되는 문자들을 골라 복사하여 각 문자 위치 바로 뒤에 붙여넣습니다. 
예를 들어, 원본 문자열이 string 일 때 3개의 연속되는 문자 tri 를 골라 복사하면 sttrriing이 됩니다.
민겸이는 문자열 복사를 이용하여 특정한 문자열을 만들려고 합니다. 민겸이는 현재 세 글자의 문자열을 가지고 있습니다.
 민겸이가 문자열 복사를 최소 몇 번 해야 목표 문자열을 만들 수 있을지 구하세요.

 답안:
 
import java.io.*;

import java.util.*; 

//don't change 'Main' class name and  'public' accessor. 

public class Main {
	  static int check2(List<Integer> in,List<Integer> tar)
	  {
		  int cnt=0;
		
		  while(!in.equals(tar))
		  {
			  
			  for(int i=0;i<in.size();i++)
			  {
				
				  if(tar.get(i)==in.get(i))
					  continue;
				  if(tar.get(i)>=2*in.get(i))
					  in.set(i, in.get(i)*2);
				  else  
					  in.set(i, tar.get(i));
			  }
			  cnt++;
				 
		  }
		  
		  return cnt;
	  }
	  
	  static int check3(List<Integer> in,List<Integer> tar)
	  {
		  int cnt=0;
		  
		 
		  while(in.get(1)!=tar.get(1))
		  {
			  if(tar.get(1)>=in.get(1)*2)
			  {
				  for(int i=0;i<3;i++)
					  in.set(i, in.get(i)*2);
			  }
			  else
			  {
				  in.set(1,tar.get(1));
				  int left1=tar.get(0)-in.get(0);
				  int left2=tar.get(2)-in.get(2);
				  if(left1/in.get(0)>=left2/in.get(2))
				  {
					  in.set(0, in.get(0)*2);
				  }
				  else
				  {
					  in.set(2, in.get(2)*2);
				  }
			  }
			  for(int i=0;i<3;i++)
			  {
				  if(in.get(i)>tar.get(i))
					  in.set(i, tar.get(i));
			  }
			  cnt++;
				 
		  }
		  
		  while(in.get(0)!=tar.get(0))
		  {
			  if(tar.get(0)>in.get(0))
				  in.set(0, in.get(0)*2);
			  if(in.get(0)>tar.get(0))
				  in.set(0, tar.get(0));
			  cnt++;
		  }
		  
		  while(in.get(2)!=tar.get(2))
		  {
			  if(tar.get(2)>in.get(2))
				  in.set(2, in.get(2)*2);
			  if(in.get(2)>tar.get(2))
				  in.set(2, tar.get(2));
			  cnt++;
		  }
		  
		  return cnt;
	  }
 public static void main(String[] args) throws IOException { 

     Scanner scanner = new Scanner(System.in); 

     String input = scanner.nextLine(); 

     String target= scanner.nextLine(); 
     if((input.charAt(0)!=input.charAt(1))&&(input.charAt(0)==input.charAt(2)))
     {
    	 char[] chars=input.toCharArray();
    	 chars[2]='0';
    	 input=new String(chars);
    	 
    	 chars=target.toCharArray();
    	 boolean flag=false;
    	 for(int i=0;i<target.length();i++)
    	 {
    		 if(chars[i]==input.charAt(1))
    		 {
    			 flag=true;
    		 }
    		 if(flag&&chars[i]==input.charAt(0))
    		 {
    			 chars[i]='0';
    		 }
    	 }
    	 target=new String(chars);
     }
     
     List<Integer> in=new ArrayList<>();
     List<Character> inC=new ArrayList<>();
     
     List<Integer> tar=new ArrayList<>();
     List<Character> tarC=new ArrayList<>();

     for(int i=0;i<input.length();i++)
     {
    	 char temp=input.charAt(i);
    	 if(inC.contains(temp))
    	 {
    		 in.set(inC.indexOf(temp),in.get(inC.indexOf(temp))+1);
    	 }
    	 else
    	 {
    		 inC.add(temp);
    		 in.add(1);
    	 }
     }
     
     for(int i=0;i<target.length();i++)
     {
    	 char temp=target.charAt(i);
    	 if(tarC.contains(temp))
    	 {
    		 tar.set(tarC.indexOf(temp),tar.get(tarC.indexOf(temp))+1);
    	 }
    	 else
    	 {
    		 tarC.add(temp);
    		 tar.add(1);
    	 }
     }
     
     if(in.size()<3)
    	 System.out.println(check2(in, tar));
     else
     {
    	 System.out.println(check3(in, tar));
     }
    	 

 }
}