문제:
이 문제에서 그림이란, 영어 알파벳 대문자로만 구성된 길이가 서로 같은 문자열 여러 줄을 뜻합니다. 다음은 그림의 예시입니다.

[그림의 예시]

ABCD
PQRS

그림에 정수와의 곱셈 연산을 정의합시다. 세로로 N줄, 가로로 M줄인 그림에 정수 K를 곱하면 그 결과는 세로로 N × K줄, 가로로 M × K줄인 새 그림입니다.
 새 그림은 K × K개의 기존 그림이 바둑판처럼 채워져 있습니다. 다음은 위 예시에 2를 곱한 그림과 3을 곱한 그림입니다.

 [위 예시에 2를 곱한 그림]

ABCDABCD
PQRSPQRS
ABCDABCD
PQRSPQRS

[위 예시에 3을 곱한 그림]

ABCDABCDABCD
PQRSPQRSPQRS
ABCDABCDABCD
PQRSPQRSPQRS
ABCDABCDABCD
PQRSPQRSPQRS

기성이는 건물 외벽 도장업체의 젊은 사장입니다. 기성이의 업체가 내세우는 장점은 특허받은 기술을 이용해 넓은 벽면에 원하는 그림을 빠르게 도장하는 것입니다. 
먼저 벽면의 한 귀퉁이에 비교적 그리기 쉬운 작은 그림을 그립니다. 그 다음 특허받은 기술을 이용하여 그 그림에 K를 곱하면, 
나머지 영역을 빠르게 채워버릴 수 있습니다.

압도적인 작업 속도에 기성이를 찾는 시공사와 건물주가 많아졌습니다. 이들은 벽면에 그려지길 원하는 커다란 그림을 기성이에게 보냅니다. 
기성이는 귀퉁이에 그릴 작은 그림을 알아내야 합니다. 물론 작은 그림에 어떤 정수를 곱해서 의뢰인에게 받은 그림과 똑같은 그림을 만들 수 있어야 합니다. 
두 그림이 똑같으려면 가로줄 수와 세로줄 수가 일치하며, 두 그림의 같은 위치에는 같은 문자가 있어야 합니다.

입력으로 그림이 하나 주어집니다. 1 이상의 정수를 한 번 곱해서 이 그림을 만들 수 있는 그림들 중 그 넓이가 가장 작은것을 출력하는 프로그램을 작성해 주세요.

답안:

import java.io.*;

import java.util.*; 

//don't change 'Main' class name and  'public' accessor. 

public class Main {
	
	static void check(char[][]map)
	{
		int rowLen=map.length;
		int colLen=map[0].length;
		int len=Integer.min(rowLen,colLen);
		boolean flag=false;
		for(int i=len;i>0;i--)
		{
			if((rowLen%i==0)&&(colLen%i==0))
			{
				flag=false;
				int rowCnt=rowLen/i;
				int colCnt=colLen/i;
				char [][]temp=new char[rowCnt][colCnt];
				for(int j=0;j<rowCnt;j++)
				{
					for(int k=0;k<colCnt;k++)
					{
						temp[j][k]=map[j][k];
					}
				}
				char[][]newMap=new char[map.length][map[0].length];
				for(int j=0;j<rowLen;j++)
				{
					for(int k=0;k<colLen;k++)
					{
						newMap[j][k]=temp[j%rowCnt][k%colCnt];
						if(newMap[j][k]!=map[j][k])
						{
							flag=true;
							break;
						}
					}
					if(flag)
						break;
				}
				if(flag)
					continue;
				for(int j=0;j<rowCnt;j++)
				{
					for(int k=0;k<colCnt;k++)
					{
						System.out.print(temp[j][k]);
					}
					System.out.println();
				}
				return;
			}
		}
		
	}
 public static void main(String[] args) throws IOException { 

     Scanner scanner = new Scanner(System.in); 

     int row = scanner.nextInt(); 

     int col = scanner.nextInt(); 
     scanner.nextLine();
     

     char [][]map=new char[row][col];
     for(int i=0;i<row;i++)
     {
    	 String temp=scanner.nextLine();
    	 for(int j=0;j<col;j++)
    	 {
    		 map[i][j]=temp.charAt(j);
    	 }
     }

   
     check(map);

 }
}